<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wo1261931780.JOSPexaminationSystemJava.dao.MergeDatabaseMapper">
    <resultMap id="BaseResultMap" type="wo1261931780.JOSPexaminationSystemJava.entity.MergeDatabase">
        <!--@mbg.generated-->
        <!--@Table merge_database-->
        <id column="rank" jdbcType="INTEGER" property="rank"/>
        <result column="student_name" jdbcType="VARCHAR" property="studentName"/>
        <result column="score_polite" jdbcType="INTEGER" property="scorePolite"/>
        <result column="score_english" jdbcType="INTEGER" property="scoreEnglish"/>
        <result column="score_professional_1" jdbcType="INTEGER" property="scoreProfessional1"/>
        <result column="score_professional_2" jdbcType="INTEGER" property="scoreProfessional2"/>
        <result column="score_total" jdbcType="INTEGER" property="scoreTotal"/>
        <result column="score_total_public" jdbcType="INTEGER" property="scoreTotalPublic"/>
        <result column="score_total_professional" jdbcType="INTEGER" property="scoreTotalProfessional"/>
        <result column="hgy_rank" jdbcType="INTEGER" property="hgyRank"/>
        <result column="ky_box_rank" jdbcType="INTEGER" property="kyBoxRank"/>
        <result column="xb_rank" jdbcType="INTEGER" property="xbRank"/>
    </resultMap>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update merge_database
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="student_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.studentName,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="score_polite = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scorePolite,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="score_english = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreEnglish,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="score_professional_1 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreProfessional1,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="score_professional_2 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreProfessional2,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="score_total = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotal,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="score_total_public = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotalPublic,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="score_total_professional = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotalProfessional,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="hgy_rank = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.hgyRank,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="ky_box_rank = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.kyBoxRank,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="xb_rank = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.xbRank,jdbcType=INTEGER}
                </foreach>
            </trim>
        </trim>
        where `rank` in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.rank,jdbcType=INTEGER}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update merge_database
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="student_name = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.studentName != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.studentName,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="score_polite = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.scorePolite != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scorePolite,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="score_english = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.scoreEnglish != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreEnglish,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="score_professional_1 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.scoreProfessional1 != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreProfessional1,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="score_professional_2 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.scoreProfessional2 != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreProfessional2,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="score_total = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.scoreTotal != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotal,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="score_total_public = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.scoreTotalPublic != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotalPublic,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="score_total_professional = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.scoreTotalProfessional != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.scoreTotalProfessional,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="hgy_rank = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.hgyRank != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.hgyRank,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="ky_box_rank = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.kyBoxRank != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.kyBoxRank,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="xb_rank = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.xbRank != null">
                        when `rank` = #{item.rank,jdbcType=INTEGER} then #{item.xbRank,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
        </trim>
        where `rank` in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.rank,jdbcType=INTEGER}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into merge_database
        (`rank`, student_name, score_polite, score_english, score_professional_1, score_professional_2,
         score_total, score_total_public, score_total_professional, hgy_rank, ky_box_rank,
         xb_rank)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.rank,jdbcType=INTEGER}, #{item.studentName,jdbcType=VARCHAR}, #{item.scorePolite,jdbcType=INTEGER},
             #{item.scoreEnglish,jdbcType=INTEGER}, #{item.scoreProfessional1,jdbcType=INTEGER},
             #{item.scoreProfessional2,jdbcType=INTEGER}, #{item.scoreTotal,jdbcType=INTEGER},
             #{item.scoreTotalPublic,jdbcType=INTEGER}, #{item.scoreTotalProfessional,jdbcType=INTEGER},
             #{item.hgyRank,jdbcType=INTEGER}, #{item.kyBoxRank,jdbcType=INTEGER}, #{item.xbRank,jdbcType=INTEGER})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" parameterType="wo1261931780.JOSPexaminationSystemJava.entity.MergeDatabase">
        <!--@mbg.generated-->
        insert into merge_database
        (`rank`, student_name, score_polite, score_english, score_professional_1, score_professional_2,
         score_total, score_total_public, score_total_professional, hgy_rank, ky_box_rank,
         xb_rank)
        values (#{rank,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{scorePolite,jdbcType=INTEGER},
                #{scoreEnglish,jdbcType=INTEGER}, #{scoreProfessional1,jdbcType=INTEGER},
                #{scoreProfessional2,jdbcType=INTEGER},
                #{scoreTotal,jdbcType=INTEGER}, #{scoreTotalPublic,jdbcType=INTEGER},
                #{scoreTotalProfessional,jdbcType=INTEGER},
                #{hgyRank,jdbcType=INTEGER}, #{kyBoxRank,jdbcType=INTEGER}, #{xbRank,jdbcType=INTEGER})
        on duplicate key update `rank`                   = #{rank,jdbcType=INTEGER},
                                student_name             = #{studentName,jdbcType=VARCHAR},
                                score_polite             = #{scorePolite,jdbcType=INTEGER},
                                score_english            = #{scoreEnglish,jdbcType=INTEGER},
                                score_professional_1     = #{scoreProfessional1,jdbcType=INTEGER},
                                score_professional_2     = #{scoreProfessional2,jdbcType=INTEGER},
                                score_total              = #{scoreTotal,jdbcType=INTEGER},
                                score_total_public       = #{scoreTotalPublic,jdbcType=INTEGER},
                                score_total_professional = #{scoreTotalProfessional,jdbcType=INTEGER},
                                hgy_rank                 = #{hgyRank,jdbcType=INTEGER},
                                ky_box_rank              = #{kyBoxRank,jdbcType=INTEGER},
                                xb_rank                  = #{xbRank,jdbcType=INTEGER}
    </insert>
    <insert id="insertOrUpdateSelective" parameterType="wo1261931780.JOSPexaminationSystemJava.entity.MergeDatabase">
        <!--@mbg.generated-->
        insert into merge_database
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rank != null">
                `rank`,
            </if>
            <if test="studentName != null">
                student_name,
            </if>
            <if test="scorePolite != null">
                score_polite,
            </if>
            <if test="scoreEnglish != null">
                score_english,
            </if>
            <if test="scoreProfessional1 != null">
                score_professional_1,
            </if>
            <if test="scoreProfessional2 != null">
                score_professional_2,
            </if>
            <if test="scoreTotal != null">
                score_total,
            </if>
            <if test="scoreTotalPublic != null">
                score_total_public,
            </if>
            <if test="scoreTotalProfessional != null">
                score_total_professional,
            </if>
            <if test="hgyRank != null">
                hgy_rank,
            </if>
            <if test="kyBoxRank != null">
                ky_box_rank,
            </if>
            <if test="xbRank != null">
                xb_rank,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rank != null">
                #{rank,jdbcType=INTEGER},
            </if>
            <if test="studentName != null">
                #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="scorePolite != null">
                #{scorePolite,jdbcType=INTEGER},
            </if>
            <if test="scoreEnglish != null">
                #{scoreEnglish,jdbcType=INTEGER},
            </if>
            <if test="scoreProfessional1 != null">
                #{scoreProfessional1,jdbcType=INTEGER},
            </if>
            <if test="scoreProfessional2 != null">
                #{scoreProfessional2,jdbcType=INTEGER},
            </if>
            <if test="scoreTotal != null">
                #{scoreTotal,jdbcType=INTEGER},
            </if>
            <if test="scoreTotalPublic != null">
                #{scoreTotalPublic,jdbcType=INTEGER},
            </if>
            <if test="scoreTotalProfessional != null">
                #{scoreTotalProfessional,jdbcType=INTEGER},
            </if>
            <if test="hgyRank != null">
                #{hgyRank,jdbcType=INTEGER},
            </if>
            <if test="kyBoxRank != null">
                #{kyBoxRank,jdbcType=INTEGER},
            </if>
            <if test="xbRank != null">
                #{xbRank,jdbcType=INTEGER},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="rank != null">
                `rank` = #{rank,jdbcType=INTEGER},
            </if>
            <if test="studentName != null">
                student_name = #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="scorePolite != null">
                score_polite = #{scorePolite,jdbcType=INTEGER},
            </if>
            <if test="scoreEnglish != null">
                score_english = #{scoreEnglish,jdbcType=INTEGER},
            </if>
            <if test="scoreProfessional1 != null">
                score_professional_1 = #{scoreProfessional1,jdbcType=INTEGER},
            </if>
            <if test="scoreProfessional2 != null">
                score_professional_2 = #{scoreProfessional2,jdbcType=INTEGER},
            </if>
            <if test="scoreTotal != null">
                score_total = #{scoreTotal,jdbcType=INTEGER},
            </if>
            <if test="scoreTotalPublic != null">
                score_total_public = #{scoreTotalPublic,jdbcType=INTEGER},
            </if>
            <if test="scoreTotalProfessional != null">
                score_total_professional = #{scoreTotalProfessional,jdbcType=INTEGER},
            </if>
            <if test="hgyRank != null">
                hgy_rank = #{hgyRank,jdbcType=INTEGER},
            </if>
            <if test="kyBoxRank != null">
                ky_box_rank = #{kyBoxRank,jdbcType=INTEGER},
            </if>
            <if test="xbRank != null">
                xb_rank = #{xbRank,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
</mapper>
